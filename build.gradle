buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'

group = 'com.zwirownia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation ('org.springframework.boot:spring-boot-starter-actuator')
    testCompile ('org.springframework.boot:spring-boot-starter-test')
    runtime ('io.micrometer:micrometer-registry-prometheus')
    compile ('io.micrometer:micrometer-core')
    compile ('org.thymeleaf:thymeleaf-spring5')
    compile ('com.google.guava:guava:18.0')
    compile ('org.springframework.boot:spring-boot-starter-aop')
    compile ('org.springframework:spring-context-support:4.1.7.RELEASE')
    //compile ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:2.1.3.RELEASE')
    //compile ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:2.1.3.RELEASE')
    compile ('org.springframework.cloud:spring-cloud-starter-stream-rabbit:2.2.1.RELEASE')
    //compile ('org.springframework.cloud:spring-cloud-stream-binder-rabbit:1.3.0.RELEASE')
    testCompile('org.junit.jupiter:junit-jupiter:5.4.0')
    compileOnly('org.projectlombok:lombok')
    //compile('org.postgresql:postgresql')
    runtimeOnly('com.h2database:h2')
}

test {
    useJUnitPlatform()
}